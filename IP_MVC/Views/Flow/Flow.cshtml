@using BL.Domain
@using IP_MVC
@model IEnumerable<BL.Domain.Flow> 
@inject BL.Interfaces.IFlowManager FlowManager

@{
    ViewBag.Title = "Flows";
    Layout = "_Layout";
}

<body class="flow-page">
<div class="container-fluid">
    <img class="overlay-image position-absolute top-0 bottom-0 w-100 h-100" src="https://storage.googleapis.com/phygital-public/Flows/flow_halve_handjes.png" alt="Beschrijving van de afbeelding">

    <div class="card border-1 border-black pt-3 position-relative">
        <div class="big-card-content overflow-scroll">
            <div class="row m-0">
                @foreach (var flow in Model)
                {
                    <div class="col-12 col-sm-12 col-md-6 col-lg-4 col-xl-4 pb-3">
                        <div class="position-relative">
                            <div class="card border-1 border-black little-card">
                                <div class="card-body overflow-scroll">
                                    <h5 class="card-title">@flow.Name</h5>
                                    <p class="card-text">@flow.Description</p>
                                </div>

                                <div class="d-flex align-items-center text-center position-sticky py-1">
                                    <div class="flex-grow-1">
                                        @if (User.IsInRole(CustomIdentityConstants.AdminRole))
                                        {
                                            <a class="btn bi bi-trash" href="@Url.Action("Delete", "Flow", new { flowId = flow.Id })" onclick="return confirm('Are you sure you want to delete this flow?')"></a>
                                        }
                                    </div>
                                    <div class="flex-grow-1">
                                        @if (User.IsInRole(CustomIdentityConstants.AdminRole))
                                        {
                                            <a class="btn btn-sm" href="@Url.Action("Edit", "Flow", new { parentFlowId = flow.Id })">Edit</a>
                                        }
                                    </div>


                                    <div class="flex-grow-1">
                                        @if (FlowManager.IsParentFlow(flow.Id))
                                        {
                                            <a href="@Url.Action("SubFlow", "Flow", new { parentFlowId = flow.Id })" class="btn arrow-submit-right"></a>
                                        }
                                        else
                                        {
                                            <a href="@Url.Action("PlayFlow", "Flow", new { parentFlowId = flow.Id, FlowType.LINEAR })" class="btn btn-primary">Start Flow</a>
                                            <a href="@Url.Action("PlayFlow", "Flow", new { parentFlowId = flow.Id, FlowType.CIRCULAR })" class="btn btn-primary">Start Circular Flow</a>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="py-3 d-flex justify-content-center align-items-center">

            @if (User.IsInRole(CustomIdentityConstants.AdminRole))
            {
                <button class="btn create-btn" id="popupButton">Create New Flow</button>
                @await Html.PartialAsync("_Create", new BL.Domain.Flow())
            }
        </div>
    </div >
</div >
</body >

@section Scripts
{
    <script src="~/dist/createFlow.entry.js"></script >
}